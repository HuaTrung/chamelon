{"version":3,"sources":["objects/topics.js","components/Splash.js","objects/io.js","objects/game.js","components/CreateGame.js","components/JoinGame.js","components/Lobby.js","components/Chat.js","components/Round.js","components/Clue.js","components/Vote.js","components/Results.js","objects/player.js","components/AskingName.js","App.js","serviceWorker.js","index.js"],"names":["exports","topics","topic","language","words","Splash","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","joinGame","renderPage","newGame","react_default","a","createElement","className","name","onClick","Component","IO","db","doc","createClass","key","value","_emit","asyncToGenerator","regenerator_default","mark","_callee","data","extend","cityRef","wrap","_context","prev","next","setDoc","events","time","serverTimestamp","merge","stop","_x","_x2","_x3","apply","arguments","Game","code","len","charset","i","charAt","Math","floor","random","length","toUpperCase","generateCode","players","chat","turn","status","io","array","j","_ref","player","push","id","player_id","jsonedObject","x","splice","indexOf","to","emit","map","isHost","socket","undefined","console","log","forEach","isChameleon","wordGiven","votedFor","chameleon","filter","topicObj","topicSelected","toLowerCase","secretWord","shuffle","playerType","playerTurn","clearInterval","timerInterval","socketId","startVote","_this2","seconds","voteTime","answers","answer","submittedWord","setInterval","evaluateVotes","ids","_this3","_this4","votes","counts","playerName","vote","object","winner","keys","max","values","winningPlayer","getPlayerById","leave","concat","tieBreaker","CreateGame","back","createGame","e","game","json","preventDefault","state","playerJoin","toJSON","room","notify_player","playerId","changeName","setState","target","changeTopic","changeTurnTimer","turnTime","changeVotingTime","onChange","type","fetch","sort","unshift","JoinGame","join","docRef1","current","getDoc","sent","exists","setCode","assign","setMessage","forceUpper","React","createRef","maxLength","ref","Lobby","leaveGame","code_game","startGame","Chat","sendMessage","content","messageContent","scrollToBottom","chatEnd","scrollIntoView","behavior","prevProps","messages","message","style","author","color","el","placeholder","Round","submitWord","clue","word","currentTurn","timer","isMyTurn","reset","Chat_Chat","Clue","selectClue","clueSelected","selectedClue","Vote","toggleVote","showVote","placeVote","playerAnswers","Clue_Clue","Fragment","Results","voteCorrect","Player","points","event","AskingName","login","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","navigator","vibrate","webkitVibrate","mozVibrate","msVibrate","getCookie","cname","ca","decodeURIComponent","document","cookie","split","c","substring","setCookie","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","App","createAlert","toConsumableArray","initSocket","rendered","showAlert","alert","selectedTopic","page","startRound","onSnapshot","event1","id_chamelon","new_id","docRef","docSnap","listen_room","docSnap1","AskingName_AskingName","Splash_Splash","CreateGame_CreateGame","setHost","JoinGame_JoinGame","Lobby_Lobby","Round_Round","Vote_Vote","Results_Results","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"0EAs3BAA,EAAQC,OAp3BR,CACI,CACIC,MAAS,cACTC,SAAY,UACZC,MAAS,CACL,aACA,aACA,YACA,kBACA,aACA,WACA,yBACA,oBACA,yBACA,UACA,YACA,kBACA,wBACA,uBACA,uBACA,sBAGR,CACIF,MAAS,YACTC,SAAY,UACZC,MAAS,CACL,KACA,SACA,UACA,SACA,QACA,MACA,SACA,QACA,QACA,QACA,QACA,SACA,SACA,YACA,SACA,UAGR,CACIF,MAAS,SACTC,SAAY,UACZC,MAAS,CACL,gBACA,eACA,OACA,QACA,OACA,YACA,mBACA,gBACA,0BACA,aACA,YACA,eACA,eACA,UACA,aACA,WAGR,CACIF,MAAS,aACTC,SAAY,UACZC,MAAS,CACL,UACA,WACA,KACA,MACA,YACA,WACA,cACA,YACA,QACA,UACA,UACA,SACA,WACA,QACA,eACA,UAGR,CACIF,MAAS,qBACTC,SAAY,UACZC,MAAS,CACL,UACA,WACA,oBACA,WACA,UACA,UACA,UACA,QACA,SACA,SACA,UACA,OACA,SACA,QACA,UACA,YAGR,CACIF,MAAS,SACTC,SAAY,UACZC,MAAS,CACL,gBACA,QACA,QACA,UACA,SACA,OACA,SACA,cACA,QACA,iBACA,QACA,gBACA,SACA,SACA,YACA,cAGR,CACIF,MAAS,UACTC,SAAY,UACZC,MAAS,CACL,SACA,UACA,UACA,UACA,SACA,UACA,SACA,OACA,eACA,WACA,UACA,cACA,WACA,YACA,UACA,WAGR,CACIF,MAAS,WACTC,SAAY,UACZC,MAAS,CACL,kBACA,uBACA,UACA,YACA,OACA,oBACA,cACA,SACA,cACA,SACA,QACA,YACA,iBACA,WACA,iBACA,cAGR,CACIF,MAAS,OACTC,SAAY,UACZC,MAAS,CACL,OACA,eACA,QACA,SACA,gBACA,gBACA,UACA,WACA,eACA,aACA,aACA,YACA,sBACA,WACA,SACA,UAGR,CACIF,MAAS,SACTC,SAAY,UACZC,MAAS,CACL,WACA,aACA,SACA,WACA,SACA,aACA,YACA,aACA,OACA,UACA,eACA,YACA,WACA,SACA,YACA,YAGR,CACIF,MAAS,uBACTC,SAAY,UACZC,MAAS,CACL,gBACA,aACA,UACA,cACA,eACA,eACA,aACA,gBACA,YACA,gBACA,aACA,WACA,WACA,qBACA,mBACA,qBAGR,CACIF,MAAS,WACTC,SAAY,UACZC,MAAS,CACL,WACA,YACA,eACA,QACA,aACA,QACA,WACA,cACA,eACA,QACA,UACA,SACA,cACA,WACA,UACA,gBAGR,CACIF,MAAS,QACTC,SAAY,UACZC,MAAS,CACL,cACA,kBACA,iBACA,OACA,qBACA,gBACA,wBACA,aACA,QACA,gBACA,OACA,UACA,UACA,QACA,YACA,OAGR,CACIF,MAAS,gBACTC,SAAY,UACZC,MAAS,CACL,SACA,SACA,QACA,OACA,YACA,WACA,UACA,UACA,SACA,WACA,QACA,WACA,UACA,SACA,UACA,WAGR,CACIF,MAAS,YACTC,SAAY,UACZC,MAAS,CACL,QACA,cACA,SACA,QACA,MACA,aACA,YACA,YACA,OACA,YACA,UACA,eACA,aACA,MACA,kBACA,eAGR,CACIF,MAAS,aACTC,SAAY,UACZC,MAAS,CACL,UACA,iBACA,UACA,kBACA,SACA,kBACA,UACA,YACA,4BACA,QACA,aACA,QACA,aACA,QACA,QACA,WAGR,CACIF,MAAS,sBACTC,SAAY,UACZC,MAAS,CACL,kBACA,cACA,WACA,OACA,QACA,YACA,UACA,WACA,SACA,QACA,QACA,YACA,QACA,QACA,UACA,UAGR,CACIF,MAAS,gBACTC,SAAY,UACZC,MAAS,CACL,UACA,UACA,OACA,aACA,WACA,OACA,cACA,YACA,QACA,UACA,WACA,YACA,YACA,eACA,WACA,YAGR,CACIF,MAAS,SACTC,SAAY,UACZC,MAAS,CACL,aACA,UACA,iBACA,WACA,QACA,UACA,WACA,aACA,UACA,SACA,WACA,WACA,SACA,cACA,YACA,WAGR,CACIF,MAAS,QACTC,SAAY,UACZC,MAAS,CACL,UACA,WACA,QACA,MACA,UACA,cACA,WACA,SACA,aACA,SACA,QACA,OACA,UACA,cACA,UACA,WAGR,CACIF,MAAS,UACTC,SAAY,UACZC,MAAS,CACL,cACA,eACA,aACA,iBACA,iBACA,mBACA,cACA,eACA,aACA,kBACA,cACA,YACA,eACA,kBACA,aACA,oBAGR,CACIF,MAAS,UACTC,SAAY,UACZC,MAAS,CACL,SACA,UACA,UACA,WACA,UACA,SACA,OACA,UACA,WACA,QACA,QACA,kBACA,OACA,SACA,UACA,WAGR,CACIF,MAAS,WACTC,SAAY,UACZC,MAAS,CACL,UACA,eACA,aACA,UACA,mBACA,oBACA,cACA,aACA,YACA,SACA,mBACA,kBACA,mBACA,OACA,UACA,iBAGR,CACIF,MAAS,SACTC,SAAY,UACZC,MAAS,CACL,SACA,OACA,gBACA,WACA,MACA,OACA,YACA,eACA,WACA,QACA,YACA,OACA,YACA,UACA,QACA,cAGR,CACIF,MAAS,UACTC,SAAY,UACZC,MAAS,CACL,eACA,eACA,SACA,YACA,gBACA,cACA,cACA,kBACA,gBACA,oBACA,eACA,gBACA,mBACA,gBACA,aACA,oBAGR,CACIF,MAAS,QACTC,SAAY,UACZC,MAAS,CACL,WACA,OACA,aACA,WACA,WACA,YACA,aACA,kBACA,aACA,UACA,OACA,QACA,YACA,aACA,QACA,yBAGR,CACIF,MAAS,YACTC,SAAY,UACZC,MAAS,CACL,OACA,QACA,SACA,UACA,MACA,SACA,SACA,OACA,SACA,QACA,UACA,SACA,WACA,SACA,YACA,UAGR,CACIF,MAAS,cACTC,SAAY,UACZC,MAAS,CACL,SACA,UACA,WACA,UACA,SACA,UACA,mBACA,YACA,WACA,SACA,MACA,SACA,SACA,YACA,cACA,UAGR,CACIF,MAAS,mBACTC,SAAY,UACZC,MAAS,CACL,YACA,oBACA,OACA,wBACA,oBACA,wBACA,qBACA,cACA,YACA,aACA,mCACA,SACA,eACA,qBACA,qBACA,wBAGR,CACIF,MAAS,gBACTC,SAAY,UACZC,MAAS,CACL,WACA,aACA,sBACA,sBACA,eACA,qBACA,eACA,iBACA,oBACA,YACA,YACA,wBACA,UACA,qBACA,aACA,0BAGR,CACIF,MAAS,mBACTC,SAAY,UACZC,MAAS,CACL,aACA,UACA,gBACA,kBACA,YACA,sCACA,qBACA,+BACA,8BACA,sBACA,oCACA,kBACA,iBACA,uCACA,4BACA,oBAGR,CACIF,MAAS,eACTC,SAAY,UACZC,MAAS,CACL,cACA,iBACA,YACA,YACA,UACA,kBACA,YACA,kBACA,iBACA,eACA,gBACA,aACA,eACA,YACA,eACA,eAGR,CACIF,MAAS,QACTC,SAAY,UACZC,MAAS,CACL,OACA,UACA,MACA,UACA,cACA,MACA,OACA,QACA,YACA,SACA,QACA,QACA,OACA,QACA,YACA,WAGR,CACIF,MAAS,OACTC,SAAY,UACZC,MAAS,CACL,YACA,UACA,eACA,iBACA,aACA,YACA,iBACA,SACA,QACA,aACA,OACA,YACA,SACA,UACA,YACA,YAGR,CACIF,MAAS,kBACTC,SAAY,UACZC,MAAS,CACL,WACA,eACA,OACA,QACA,aACA,QACA,iBACA,iBACA,YACA,iBACA,SACA,QACA,aACA,gBACA,QACA,uBAGR,CACIF,MAAS,OACTC,SAAY,UACZC,MAAS,CACL,QACA,QACA,OACA,UACA,WACA,QACA,SACA,YACA,OACA,OACA,QACA,YACA,OACA,QACA,UACA,SAGR,CACIF,MAAS,qBACTC,SAAY,UACZC,MAAS,CACL,QACA,SACA,uBACA,SACA,WACA,yBACA,gBACA,YACA,SACA,aACA,mBACA,SACA,SACA,WACA,SACA,cAGR,CACIF,MAAS,SACTC,SAAY,UACZC,MAAS,CACL,OACA,UACA,YACA,MACA,YACA,aACA,UACA,QACA,UACA,YACA,MACA,WACA,UACA,UACA,QACA,eAGR,CACIF,MAAS,MACTC,SAAY,UACZC,MAAS,CACL,WACA,UACA,OACA,WACA,UACA,UACA,MACA,YACA,QACA,UACA,QACA,QACA,QACA,UACA,SACA,YAGR,CACIF,MAAS,wBACTC,SAAY,UACZC,MAAS,CACL,OACA,S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","file":"static/js/main.29462c10.chunk.js","sourcesContent":["\nconst topics=\n[\n    {\n        \"topic\": \"Fairy Tales\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Cinderella\",\n            \"Snow White\",\n            \"Peter Pan\",\n            \"Sleeping Beauty\",\n            \"Goldilocks\",\n            \"Rapunzel\",\n            \"Little Red Riding Hood\",\n            \"Hansel and Gretel\",\n            \"Jack and the Beanstalk\",\n            \"Aladdin\",\n            \"Pinocchio\",\n            \"Gingerbread Man\",\n            \"Hare and the Tortoise\",\n            \"Princess and the Pea\",\n            \"Beauty and the Beast\",\n            \"Three Little Pigs\"\n        ]\n    },\n    {\n        \"topic\": \"Countries\",\n        \"language\": \"english\",\n        \"words\": [\n            \"UK\",\n            \"France\",\n            \"Germany\",\n            \"Canada\",\n            \"Spain\",\n            \"USA\",\n            \"Mexico\",\n            \"China\",\n            \"Japan\",\n            \"Italy\",\n            \"India\",\n            \"Russia\",\n            \"Brazil\",\n            \"Australia\",\n            \"Israel\",\n            \"Egypt\"\n        ]\n    },\n    {\n        \"topic\": \"Movies\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Jurassic Park\",\n            \"Transformers\",\n            \"E.T.\",\n            \"Shrek\",\n            \"Jaws\",\n            \"Toy Story\",\n            \"The Wizard of Oz\",\n            \"The Godfather\",\n            \"Raiders of the Lost Ark\",\n            \"Home Alone\",\n            \"King Kong\",\n            \"Finding Nemo\",\n            \"The Avengers\",\n            \"Titanic\",\n            \"The Matrix\",\n            \"Avatar\"\n        ]\n    },\n    {\n        \"topic\": \"Inventions\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Matches\",\n            \"Computer\",\n            \"TV\",\n            \"Car\",\n            \"Gunpowder\",\n            \"Internet\",\n            \"Electricity\",\n            \"Telephone\",\n            \"Wheel\",\n            \"Compass\",\n            \"Writing\",\n            \"Camera\",\n            \"Printing\",\n            \"Plane\",\n            \"Steam Engine\",\n            \"Radio\"\n        ]\n    },\n    {\n        \"topic\": \"Mythical Creatures\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Cyclops\",\n            \"Werewolf\",\n            \"Loch Ness Monster\",\n            \"Minotaur\",\n            \"Pegasus\",\n            \"Unicorn\",\n            \"Mermaid\",\n            \"Hydra\",\n            \"Medusa\",\n            \"Dragon\",\n            \"Phoenix\",\n            \"Yeti\",\n            \"Sphinx\",\n            \"Troll\",\n            \"Vampire\",\n            \"Centaur\"\n        ]\n    },\n    {\n        \"topic\": \"Cities\",\n        \"language\": \"english\",\n        \"words\": [\n            \"New York City\",\n            \"Paris\",\n            \"Tokyo\",\n            \"Chicago\",\n            \"Moscow\",\n            \"Rome\",\n            \"Athens\",\n            \"Los Angeles\",\n            \"Delhi\",\n            \"Rio De Janeiro\",\n            \"Cairo\",\n            \"San Francisco\",\n            \"London\",\n            \"Sydney\",\n            \"Hong Kong\",\n            \"Jerusalem\"\n        ]\n    },\n    {\n        \"topic\": \"Hobbies\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Stamps\",\n            \"Fishing\",\n            \"Sailing\",\n            \"Cooking\",\n            \"Trains\",\n            \"Reading\",\n            \"Travel\",\n            \"Yoga\",\n            \"Model Making\",\n            \"Painting\",\n            \"Walking\",\n            \"Photography\",\n            \"Knitting\",\n            \"Gardening\",\n            \"Pottery\",\n            \"Hiking\"\n        ]\n    },\n    {\n        \"topic\": \"Musicals\",\n        \"language\": \"english\",\n        \"words\": [\n            \"West Side Story\",\n            \"Phantom of the Opera\",\n            \"Chicago\",\n            \"Lion King\",\n            \"Cats\",\n            \"Les Misérables\",\n            \"42nd Street\",\n            \"Wicked\",\n            \"Jersey Boys\",\n            \"Oliver\",\n            \"Annie\",\n            \"Hairspray\",\n            \"School of Rock\",\n            \"Hamilton\",\n            \"Book of Mormon\",\n            \"Mamma Mia\"\n        ]\n    },\n    {\n        \"topic\": \"Toys\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Lego\",\n            \"Rubik's Cube\",\n            \"Yo-yo\",\n            \"Slinky\",\n            \"Rocking Horse\",\n            \"Etch a Sketch\",\n            \"Frisbee\",\n            \"G.I. Joe\",\n            \"Super Soaker\",\n            \"Teddy Bear\",\n            \"Hot Wheels\",\n            \"Hula Hoop\",\n            \"Cabbage Patch Dolls\",\n            \"Play Doh\",\n            \"Barbie\",\n            \"Furby\"\n        ]\n    },\n    {\n        \"topic\": \"Sports\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Football\",\n            \"Basketball\",\n            \"Tennis\",\n            \"Lacrosse\",\n            \"Soccer\",\n            \"Ice Hockey\",\n            \"Badminton\",\n            \"Volleyball\",\n            \"Golf\",\n            \"Sailing\",\n            \"Motor Racing\",\n            \"Triathlon\",\n            \"Baseball\",\n            \"Squash\",\n            \"Wrestling\",\n            \"Cycling\"\n        ]\n    },\n    {\n        \"topic\": \"Fictional Characters\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Indiana Jones\",\n            \"James Bond\",\n            \"Dracula\",\n            \"Super Mario\",\n            \"Mary Poppins\",\n            \"Wonder Woman\",\n            \"Lara Croft\",\n            \"Homer Simpson\",\n            \"Spiderman\",\n            \"Princess Leia\",\n            \"Robin Hood\",\n            \"Hercules\",\n            \"Catwoman\",\n            \"The Little Mermaid\",\n            \"Hermione Granger\",\n            \"Katniss Everdeen\"\n        ]\n    },\n    {\n        \"topic\": \"The Arts\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Painting\",\n            \"Sculpture\",\n            \"Architecture\",\n            \"Dance\",\n            \"Literature\",\n            \"Opera\",\n            \"Stand-up\",\n            \"Comic Books\",\n            \"Illustration\",\n            \"Music\",\n            \"Theatre\",\n            \"Cinema\",\n            \"Video Games\",\n            \"Graffiti\",\n            \"Fashion\",\n            \"Photography\"\n        ]\n    },\n    {\n        \"topic\": \"Bands\",\n        \"language\": \"english\",\n        \"words\": [\n            \"The Beatles\",\n            \"Backstreet Boys\",\n            \"The Beach Boys\",\n            \"ABBA\",\n            \"The Rolling Stones\",\n            \"One Direction\",\n            \"Red Hot Chili Peppers\",\n            \"The Eagles\",\n            \"AC/DC\",\n            \"Guns N' Roses\",\n            \"KISS\",\n            \"The Who\",\n            \"Nirvana\",\n            \"Queen\",\n            \"Jackson 5\",\n            \"U2\" \n        ]\n    },\n    {\n        \"topic\": \"Civilizations\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Romans\",\n            \"Aztecs\",\n            \"Turks\",\n            \"Zulu\",\n            \"Egyptians\",\n            \"Japanese\",\n            \"Vikings\",\n            \"Chinese\",\n            \"Mayans\",\n            \"Persians\",\n            \"Incas\",\n            \"Spartans\",\n            \"Mongols\",\n            \"Greeks\",\n            \"Spanish\",\n            \"Aliens\"\n        ]\n    },\n    {\n        \"topic\": \"Transport\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Plane\",\n            \"Cruise Ship\",\n            \"Segway\",\n            \"Train\",\n            \"Car\",\n            \"Hovercraft\",\n            \"Cable Car\",\n            \"Spaceship\",\n            \"Tank\",\n            \"Motorbike\",\n            \"Jet Ski\",\n            \"Magic Carpet\",\n            \"Helicopter\",\n            \"Bus\",\n            \"Hot Air Balloon\",\n            \"Broomstick\"\n        ]\n    },\n    {\n        \"topic\": \"Presidents\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Clinton\",\n            \"George W. Bush\",\n            \"Kennedy\",\n            \"Teddy Roosevelt\",\n            \"Reagan\",\n            \"George Bush Sr.\",\n            \"Lincoln\",\n            \"Jefferson\",\n            \"Franklin Delano Roosevelt\",\n            \"Obama\",\n            \"Washington\",\n            \"Adams\",\n            \"Eisenhower\",\n            \"Trump\",\n            \"Nixon\",\n            \"Carter\"\n        ]\n    },\n    {\n        \"topic\": \"Musical Instruments\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Electric Guitar\",\n            \"Bass Guitar\",\n            \"Clarinet\",\n            \"Harp\",\n            \"Piano\",\n            \"Saxophone\",\n            \"Trumpet\",\n            \"Bagpipes\",\n            \"Violin\",\n            \"Cello\",\n            \"Voice\",\n            \"Harmonica\",\n            \"Drums\",\n            \"Flute\",\n            \"Ukelele\",\n            \"Banjo\"\n        ]\n    },\n    {\n        \"topic\": \"Under the Sea\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Octopus\",\n            \"Lobster\",\n            \"Crab\",\n            \"Sea Turtle\",\n            \"Starfish\",\n            \"Seal\",\n            \"Giant Squid\",\n            \"Clownfish\",\n            \"Shark\",\n            \"Dolphin\",\n            \"Seahorse\",\n            \"Swordfish\",\n            \"Jellyfish\",\n            \"Killer Whale\",\n            \"Stingray\",\n            \"Mermaid\"\n        ]\n    },\n    {\n        \"topic\": \"States\",\n        \"language\": \"english\",\n        \"words\": [\n            \"California\",\n            \"Florida\",\n            \"North Carolina\",\n            \"Colorado\",\n            \"Texas\",\n            \"Montana\",\n            \"New York\",\n            \"Washington\",\n            \"Alabama\",\n            \"Nevada\",\n            \"Kentucky\",\n            \"Illinois\",\n            \"Hawaii\",\n            \"Mississippi\",\n            \"Tennessee\",\n            \"Alaska\"\n        ]\n    },\n    {\n        \"topic\": \"Rooms\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Kitchen\",\n            \"Bathroom\",\n            \"Attic\",\n            \"Den\",\n            \"Hallway\",\n            \"Dining Room\",\n            \"Basement\",\n            \"Bunker\",\n            \"Greenhouse\",\n            \"Office\",\n            \"Porch\",\n            \"Shed\",\n            \"Bedroom\",\n            \"Living Room\",\n            \"Nursery\",\n            \"Garage\"\n        ]\n    },\n    {\n        \"topic\": \"Authors\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Shakespeare\",\n            \"Stephen King\",\n            \"T.S. Eliot\",\n            \"Danielle Steel\",\n            \"J.R.R. Tolkien\",\n            \"Ernest Hemingway\",\n            \"Leo Tolstoy\",\n            \"John Grisham\",\n            \"C.S. Lewis\",\n            \"Edgar Allen Poe\",\n            \"Jane Austen\",\n            \"Dan Brown\",\n            \"J.K. Rowling\",\n            \"Charles Dickens\",\n            \"Mark Twain\",\n            \"Agatha Christie\"\n        ]\n    },\n    {\n        \"topic\": \"Phobias\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Ghosts\",\n            \"Toilets\",\n            \"Needles\",\n            \"Children\",\n            \"Spiders\",\n            \"Snakes\",\n            \"Dogs\",\n            \"Shadows\",\n            \"Monsters\",\n            \"Germs\",\n            \"Birds\",\n            \"Roller Coasters\",\n            \"Rats\",\n            \"Clowns\",\n            \"Insects\",\n            \"Planes\"\n        ]\n    },\n    {\n        \"topic\": \"TV Shows\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Friends\",\n            \"Breaking Bad\",\n            \"Happy Days\",\n            \"Mad Men\",\n            \"Sex and the City\",\n            \"Days of our Lives\",\n            \"The X-Files\",\n            \"South Park\",\n            \"Star Trek\",\n            \"Cheers\",\n            \"General Hospital\",\n            \"Game of Thrones\",\n            \"The Walking Dead\",\n            \"Lost\",\n            \"Frasier\",\n            \"Golden Girls\"\n        ]\n    },\n    {\n        \"topic\": \"Drinks\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Coffee\",\n            \"Wine\",\n            \"Hot Chocolate\",\n            \"Smoothie\",\n            \"Tea\",\n            \"Beer\",\n            \"Milkshake\",\n            \"Orange Juice\",\n            \"Lemonade\",\n            \"Punch\",\n            \"Root Beer\",\n            \"Milk\",\n            \"Coca-Cola\",\n            \"Tequila\",\n            \"Water\",\n            \"Champagne\"\n        ]\n    },\n    {\n        \"topic\": \"Artists\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Damien Hirst\",\n            \"Claude Monet\",\n            \"Banksy\",\n            \"Rembrandt\",\n            \"Salvador Dali\",\n            \"Andy Warhol\",\n            \"Mark Rothko\",\n            \"Jackson Pollock\",\n            \"Pablo Picasso\",\n            \"Leonardo da Vinci\",\n            \"Keith Haring\",\n            \"Edward Hopper\",\n            \"Vincent Van Gogh\",\n            \"Michaelangelo\",\n            \"Jeff Koons\",\n            \"Georgia O'Keefe\"\n        ]\n    },\n    {\n        \"topic\": \"Games\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Monopoly\",\n            \"Risk\",\n            \"Battleship\",\n            \"Checkers\",\n            \"Scrabble\",\n            \"Operation\",\n            \"Backgammon\",\n            \"Trivial Pursuit\",\n            \"Mouse Trap\",\n            \"Twister\",\n            \"Clue\",\n            \"Jenga\",\n            \"Guess Who\",\n            \"Pictionary\",\n            \"Chess\",\n            \"Hungry Hungry Hippos\"\n        ]\n    },\n    {\n        \"topic\": \"Geography\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Lake\",\n            \"River\",\n            \"Jungle\",\n            \"Volcano\",\n            \"Sea\",\n            \"Desert\",\n            \"Island\",\n            \"Cave\",\n            \"Valley\",\n            \"Ocean\",\n            \"Glacier\",\n            \"Arctic\",\n            \"Mountain\",\n            \"Forest\",\n            \"Waterfall\",\n            \"Swamp\"\n        ]\n    },\n    {\n        \"topic\": \"Film Genres\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Horror\",\n            \"Rom-Com\",\n            \"Gangster\",\n            \"Musical\",\n            \"Action\",\n            \"Western\",\n            \"Foreign Language\",\n            \"Animation\",\n            \"Thriller\",\n            \"Comedy\",\n            \"War\",\n            \"Zombie\",\n            \"Sci-Fi\",\n            \"Christmas\",\n            \"Documentary\",\n            \"Sport\"\n        ]\n    },\n    {\n        \"topic\": \"Sci-Fi & Fantasy\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Star Wars\",\n            \"The Addams Family\",\n            \"Dune\",\n            \"The War of the Worlds\",\n            \"Lord of the Rings\",\n            \"2001: A Space Odyssey\",\n            \"The Princess Bride\",\n            \"The Martian\",\n            \"Star Trek\",\n            \"Terminator\",\n            \"Alice's Adventures in Wonderland\",\n            \"WALL-E\",\n            \"Blade Runner\",\n            \"His Dark Materials\",\n            \"Gulliver's Travels\",\n            \"Edward Scissorhands\"\n        ]\n    },\n    {\n        \"topic\": \"World Wonders\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Pyramids\",\n            \"Stonehenge\",\n            \"Christ the Redeemer\",\n            \"Great Wall of China\",\n            \"Eiffel Tower\",\n            \"Golden Gate Bridge\",\n            \"Machu Picchu\",\n            \"Mount Rushmore\",\n            \"Statue of Liberty\",\n            \"Colosseum\",\n            \"Taj Mahal\",\n            \"Empire State Building\",\n            \"Big Ben\",\n            \"Sydney House Opera\",\n            \"Hoover Dam\",\n            \"Leaning Tower of Pisa\"\n        ]\n    },\n    {\n        \"topic\": \"Children's Books\",\n        \"language\": \"english\",\n        \"words\": [\n            \"The Hobbit\",\n            \"Matilda\",\n            \"Stuart Little\",\n            \"Winnie-the-Pooh\",\n            \"Peter Pan\",\n            \"Harry Potter & The Sorcerer's Stone\",\n            \"The Cat in the Hat\",\n            \"The Adventures of Tom Sawyer\",\n            \"The Very Hungry Caterpillar\",\n            \"Alice in Wonderland\",\n            \"Charlie and the Chocolate Factory\",\n            \"The Jungle Book\",\n            \"101 Dalmations\",\n            \"The Lion, the Witch and the Wardrobe\",\n            \"Where the Wild Things Are\",\n            \"Charlotte's Web\"\n        ]\n    },\n    {\n        \"topic\": \"Sports Stars\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Tiger Woods\",\n            \"Michael Phelps\",\n            \"Hope Solo\",\n            \"Tony Hawk\",\n            \"Pelé\",\n            \"Serena Williams\",\n            \"Babe Ruth\",\n            \"Michael Johnson\",\n            \"Michael Jordan\",\n            \"Muhammad Ali\",\n            \"Wayne Gretzky\",\n            \"Usain Bolt\",\n            \"LeBron James\",\n            \"Tom Brady\",\n            \"Kelly Slater\",\n            \"Hulk Hogan\"\n        ]\n    },\n    {\n        \"topic\": \"Music\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Rock\",\n            \"Hip Hop\",\n            \"Rap\",\n            \"Country\",\n            \"Heavy Metal\",\n            \"Pop\",\n            \"Punk\",\n            \"House\",\n            \"Classical\",\n            \"Techno\",\n            \"Indie\",\n            \"Disco\",\n            \"Funk\",\n            \"Blues\",\n            \"Christmas\",\n            \"Reggae\"\n        ]\n    },\n    {\n        \"topic\": \"Jobs\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Fisherman\",\n            \"Janitor\",\n            \"Truck Driver\",\n            \"Police Officer\",\n            \"Lumberjack\",\n            \"Secretary\",\n            \"Security Guard\",\n            \"Lawyer\",\n            \"Nurse\",\n            \"Accountant\",\n            \"Chef\",\n            \"Carpenter\",\n            \"Waiter\",\n            \"Teacher\",\n            \"Architect\",\n            \"Butcher\"\n        ]\n    },\n    {\n        \"topic\": \"Cartoon Animals\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Garfield\",\n            \"Mickey Mouse\",\n            \"Nemo\",\n            \"Dumbo\",\n            \"Scooby-Doo\",\n            \"Goofy\",\n            \"Tony the Tiger\",\n            \"Wile E. Coyote\",\n            \"Yogi Bear\",\n            \"Jiminy Cricket\",\n            \"Snoopy\",\n            \"Simba\",\n            \"Bugs Bunny\",\n            \"Kung Fu Panda\",\n            \"Bambi\",\n            \"Sonic the Hedgehog\"\n        ]\n    },\n    {\n        \"topic\": \"Food\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Pizza\",\n            \"Pasta\",\n            \"Eggs\",\n            \"Sausage\",\n            \"Potatoes\",\n            \"Salad\",\n            \"Cheese\",\n            \"Ice Cream\",\n            \"Fish\",\n            \"Soup\",\n            \"Fruit\",\n            \"Chocolate\",\n            \"Cake\",\n            \"Bread\",\n            \"Chicken\",\n            \"Beef\"\n        ]\n    },\n    {\n        \"topic\": \"Historical Figures\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Jesus\",\n            \"Darwin\",\n            \"Christopher Columbus\",\n            \"Mozart\",\n            \"Napoleon\",\n            \"Martin Luther King Jr.\",\n            \"Mother Teresa\",\n            \"Cleopatra\",\n            \"Stalin\",\n            \"Pocahontas\",\n            \"Ulysses S. Grant\",\n            \"Buddha\",\n            \"Hitler\",\n            \"Einstein\",\n            \"Caesar\",\n            \"Churchill\"\n        ]\n    },\n    {\n        \"topic\": \"School\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Math\",\n            \"History\",\n            \"Economics\",\n            \"Gym\",\n            \"Chemistry\",\n            \"Philosophy\",\n            \"Spanish\",\n            \"Latin\",\n            \"Physics\",\n            \"Geography\",\n            \"Art\",\n            \"Religion\",\n            \"Biology\",\n            \"English\",\n            \"Music\",\n            \"Technology\"\n        ]\n    },\n    {\n        \"topic\": \"Zoo\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Scorpion\",\n            \"Ostrich\",\n            \"Lion\",\n            \"Elephant\",\n            \"Giraffe\",\n            \"Leopard\",\n            \"Owl\",\n            \"Alligator\",\n            \"Koala\",\n            \"Meerkat\",\n            \"Eagle\",\n            \"Zebra\",\n            \"Tiger\",\n            \"Buffalo\",\n            \"Parrot\",\n            \"Gorilla\"\n        ]\n    },\n    {\n        \"topic\": \"Wedding Anniversaries\",\n        \"language\": \"english\",\n        \"words\": [\n            \"Wood\",\n            \"Bronze\",\n            \"Crystal\",\n            \"Pearl\",\n            \"China\",\n            \"Gold\",\n            \"Flowers\",\n            \"Coral\",\n            \"Paper\",\n            \"Ruby\",\n            \"Silk\",\n            \"Tin\",\n            \"Cotton\",\n            \"Diamond\",\n            \"Leather\",\n            \"Wool\"\n        ]\n    }\n\n]\n\nexports.topics = topics;\n","import React, { Component } from 'react'\n\nimport './Splash.css';\n\nexport default class Splash extends Component {\n\n    constructor(props) {\n        super(props);\n\n     \n    }\n    joinGame = () => {\n        this.props.renderPage('join');\n    }\n\n    newGame = () => {\n        this.props.renderPage('create');\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"main-container --splash\">\n                    <div className=\"brand\">\n                        <h1>Chameleon</h1>\n                    </div>\n                    <div className=\"button-group\">\n                    <div>\n                                <label>Name: {this.props.name} </label>\n                            </div>\n                        <button className=\"button--default\" onClick={this.joinGame}>Join Game</button>\n                        <button className=\"button--default\" onClick={this.newGame}>New Game</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import { doc,setDoc, addDoc,collection,serverTimestamp } from \"firebase/firestore\"; \n\n\nexport class IO {\n    constructor(db) {\n        this.db = db\n        this.doc=null\n    }\n\n    to(doc){\n        this.doc=doc\n        return this\n    }\n\n    async emit(name, data,extend){\n        const cityRef = doc(this.db, this.doc, extend);\n        setDoc(cityRef, { events: {\n            name: name,\n            data: data,\n            time: serverTimestamp()\n        } }, { merge: true });\n    }\n}","\nimport {IO} from './io'\nimport {topics} from './topics'\nfunction generateCode(len) {\n    let code = \"\";\n\n    const charset = \"abcdefghijklmnopqrstuvwxyz\";\n\n    for (var i = 0; i < len; i++) {\n        code += charset.charAt(Math.floor(Math.random() * charset.length));\n    }\n    return code.toUpperCase();\n}\nvar io = null\nvar games = null\nvar uuid =null\nexport class Game {\n    constructor(name,db) {\n        this.name=name\n        this.code = generateCode(4);\n        this.players = [];\n        this.chat = [];\n        this.turn = 0;\n        this.status = 'lobby';\n        this.events = {\n            name:\"\",\n            data:\"\",\n            time:\"\"\n        };\n        this.io = new IO(db)\n        // this.voteTime = voteTime || 30;\n        // this.turnTime = turnTime || 30;\n        // this.topicSelected = topicSelected || 'random';\n    }\n\n    shuffle(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    // Join a player to this game\n    playerJoin(player) {\n        this.players.push({name:player.name,id:player.player_id});\n        //update lobby with player names\n        // this.io.to(this.code).emit('update_players', player.toJSON());\n    };\n\n    toJSON() {\n        var jsonedObject = {};\n        for (var x in this) {\n\n            if (x === \"toJSON\" || x === \"constructor\" || x===\"io\") {\n                continue;\n            }\n            jsonedObject[x] = this[x];\n        }\n        return jsonedObject;\n    }\n\n    playerLeave(player) {\n        this.players.splice(this.players.indexOf(player), 1);\n        this.io.to(this.code).emit('update players', this.players.map(player => player.name));\n\n        //If there are no players left in the game, delete it.\n        if(player.isHost) {\n            games.splice(games.indexOf(this), 1)\n            this.io.to(this.code).emit('leave game', 'The host disbanded the game.');\n        }\n    };\n\n    getPlayer(socket) {\n        for(let i = 0; i < this.players.length; i++) {\n            if(this.players[i].socket === socket) {\n                return this.players[i];\n            }\n        }\n    }\n\n    getPlayerById(id) {\n        for(let i = 0; i < this.players.length; i++) {\n            if(this.players[i].id === id) {\n                return this.players[i];\n            }\n        }\n    }\n\n    startRound(topic='') {\n        console.log('Round starting.');\n        this.players.forEach(player => {\n            player.isChameleon = false;\n            player.wordGiven = '';\n            player.votedFor = '';\n        });\n        this.status = 'inProgess';\n        this.turn = 0;\n        this.chameleon = this.players[Math.floor(Math.random() * this.players.length)];\n\n        // Select topic with topic name, or random if topic = \"random\" || falsy\n        if(!topic) {\n            console.log('No topic passed, must be a fresh game.')\n            console.log('Topic selected: ', this.topicSelected);\n            if(!this.topicSelected || this.topicSelected.toLowerCase() === 'random') {\n                console.log('Random topic');\n                this.topic = topics[Math.floor(Math.random() * topics.length)];\n            } else {\n                console.log('Non-random topic');\n                this.topic = topics.filter(topic => topic.topic === this.topicSelected);\n                this.topic = this.topic[0];\n            }\n        } else {\n            console.log('Topic passed, must be a new game from results screen')\n            this.topic = topics.filter(topicObj => topicObj.topic === topic);\n            this.topic = this.topic[0];\n        }\n\n        console.log('Selected Topic: ', this.topicSelected, 'Actual Topic: ', this.topic)\n\n\n        this.secretWord = this.topic.words[Math.floor(Math.random() * this.topic.words.length)];\n        //join chameleon to room-chameleon\n        //join others to room-players\n        this.players.forEach(player => {\n            if(player === this.chameleon) {\n                console.log(player.name + ' is the chameleon.');\n                this.io.to('rooms').emit('chameleon', player.name, this.code);\n                // player.socket.join(`${this.code}-chameleon`);\n            } else {\n                console.log(player.name + ' is a player.');\n                // player.socket.join(`${this.code}-players`);\n            }\n        });\n\n        this.shuffle(this.players);\n        this.io.to('rooms').emit('game_started', {topic: this.topic, playerType: 'chameleon',secretWord:this.secretWord},this.code);\n        // this.io.to(`${this.code}-chameleon`).emit('chameleon');\n        // this.io.to(`${this.code}-players`).emit('game started', {topic: this.topic, playerType: 'player', secretWord: this.secretWord});\n        this.playerTurn(this.players[this.turn]);\n    };\n\n    // startTimer(seconds, player) {\n\n    //     this.io.to(this.code).emit('update timer', seconds)\n    //     let countDown = () => {\n    //         this.io.to(this.code).emit('update timer', seconds)\n    //         seconds--;\n    //         if(seconds < 0) {\n    //             this.io.to(this.code).emit('receive message', {author: 'System', content: `${player.name} failed to give a clue in time.`});\n    //             clearInterval(this.timerInterval);\n    //             this.endTurn(player);\n    //         }\n    //     };\n        \n    //     this.timerInterval = setInterval(countDown, 1000)\n    // }\n\n    playerTurn(player) {\n        console.log(player.name + \"'s turn\");\n        // this.io.to('rooms').emit('receive message', {author: 'System', content: `It is ${player.name}'s turn.`},this.code);\n        // this.io.to('players').emit('my_turn',player.player_id);\n        // this.io.to('rooms').emit('current_turn', player.name,this.code);\n        // this.startTimer(this.turnTime, player);\n    };\n\n    endTurn() {\n        console.log('Turn ended!');\n        clearInterval(this.timerInterval);\n        if(this.turn === this.players.length - 1) {\n            this.io.to(this.players[this.turn].socketId).emit('turn over');\n            console.log('turns are over!');\n            this.startVote();\n        } else {\n            this.io.to(this.players[this.turn].socketId).emit('turn over');\n            this.turn++;\n            this.playerTurn(this.players[this.turn]);\n        }\n    }\n\n    startVote() {\n        let seconds = this.voteTime;\n        const answers = this.players.map(player => {\n            return {id: player.id, name: player.name, answer: player.submittedWord}\n        });\n        console.log(answers);\n        this.io.to(this.code).emit('start vote', answers);\n        this.io.to(this.code).emit('update timer', seconds);\n        let countDown = () => {\n            this.io.to(this.code).emit('update timer', seconds);\n            seconds--;\n            if(seconds < 0) {\n                this.io.to(this.code).emit('vote over');\n                clearInterval(this.timerInterval);\n                this.evaluateVotes();\n            }\n        }\n\n        this.timerInterval = setInterval(countDown, 1000);\n    }\n\n    tieBreaker(ids) {\n        let seconds = 15;\n        const answers = this.players.filter(player => {\n            for(let i = 0; i < ids.length; i++) {\n                if(player.id === ids[i]) {\n                    return player;\n                }\n            }\n        }).map(player => {\n            return {id: player.id, name: player.name, answer: player.submittedWord}\n        });\n        console.log(answers);\n        this.io.to(this.code).emit('tie breaker');\n        this.io.to(this.code).emit('start vote', answers);\n        this.io.to(this.code).emit('update timer', seconds);\n        let countDown = () => {\n            this.io.to(this.code).emit('update timer', seconds);\n            seconds--;\n            if(seconds < 0) {\n                this.io.to(this.code).emit('vote over');\n                clearInterval(this.timerInterval);\n                this.evaluateVotes();\n            }\n        }\n        this.timerInterval = setInterval(countDown, 1000);\n    }\n\n    evaluateVotes() {\n        const votes = [];\n        const counts = {};\n        \n        //Gather our votes\n        this.players.forEach(player => {\n            if(player.votedFor != '') {\n                votes.push({playerName: player.name, vote: player.votedFor});\n            }\n        });\n\n        // Gather our vote count\n        for(let i = 0; i < votes.length; i++) {\n            counts[votes[i].vote] = 1 + (counts[votes[i].vote] || 0);\n        };\n\n        console.log('Votes: ', votes);\n        console.log('Counts: ', counts);\n         \n        //tally up and return the winner\n        const getMax = object => {\n            return Object.keys(object).filter(x => {\n                 return object[x] == Math.max.apply(null, \n                 Object.values(object));\n           });\n        };\n\n        let winner = getMax(counts);\n        console.log('winner: ', winner[0]);\n\n        if(winner.length === 1) {\n            //If we have a clear winner, we're good to go!\n            let winningPlayer = this.getPlayerById(winner[0]);\n            this.io.to(this.code).emit('results', {winningPlayer: winningPlayer.name, chameleon: this.chameleon.name});\n            this.players.forEach(player => {\n                player.socket.leave(`${this.code}-chameleon`);\n                player.socket.leave(`${this.code}-players`);\n            })\n        } else if (winner.length < 1) {\n            //If we have no votes, start the vote process over\n            this.startVote();\n        } else {\n            //If we have a tie, initiatie a tie breaker.\n\n            //Reset the votes\n            // this.players.forEach(player => {\n            //     player.votedFor = '';\n            // });\n            this.io.to(this.code).emit('tie');\n            this.tieBreaker(winner);\n        }\n\n\n    }\n}","import React, { Component } from 'react'\n\nimport './CreateGame.css';\nimport {Game} from '../objects/game'\n\nimport { doc, setDoc } from \"firebase/firestore\"; \nimport { collection, addDoc } from \"firebase/firestore\"; \n\nexport default class CreateGame extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            topic: '',\n            turnTime: 30,\n            voteTime: 30,\n            topics: [],\n        };\n    }\n    back = () => {\n        this.props.renderPage('splash');\n    }\n\n    createGame = async (e) => {\n        e.preventDefault();\n        if(this.state.name !== '') {\n            let game = new Game(this.state.name,this.props.db);\n            var db = this.props.db;\n            game.playerJoin(this.props.player)\n            var json = game.toJSON()\n            await setDoc(doc(db, \"rooms\", game.code), \n                json\n            );\n            const cityRef = doc(db, 'players_online', this.props.player.player_id);\n            setDoc(cityRef, { isHost: true, room:game.code }, { merge: true });\n            this.props.notify_player(\"new_game\",{\n                code:game.code,\n                playerId:this.props.player.player_id\n            })\n            this.props.renderPage('lobby');\n        }\n    }\n    \n    render() {\n        return (\n            <div>\n                <div className=\"main-container --create\">\n                    <div className=\"back\" onClick={this.back}></div>\n                    <div className=\"title\">\n                        <h2>Create a Game</h2>\n                    </div>\n                    <form className=\"form-group\">\n                        <div className=\"max-sm\">\n                            <div>\n                                <label>Name</label>\n                                <input value={this.state.name} onChange={this.changeName} />\n                            </div>\n                            <div>\n                                <label>Topic</label>\n                                <select onChange={this.changeTopic}>\n                                    {this.state.topics.map(topic => {\n                                        return (<option value={topic} key={topic}>{topic}</option>);\n                                    })\n                                    }\n                                </select>\n                            </div>\n                            <div>\n                                <label>Turn Timer (seconds)</label>\n                                <input value={this.state.turnTime} type=\"number\" onChange={this.changeTurnTimer} />\n                            </div>\n                            <div>\n                                <label>Voting Time (seconds)</label>\n                                <input value={this.state.voteTime} type=\"number\" onChange={this.changeVotingTime}/>\n                            </div>\n                            <button className=\"button--default\" onClick={this.createGame} type=\"submit\">Create Game</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n\n    changeName = e => {\n        this.setState({name: e.target.value});\n    }\n\n    changeTopic = e => {\n        this.setState({topic: e.target.value});\n    }\n\n    changeTurnTimer = e => {\n        this.setState({turnTime: e.target.value});\n    }\n\n    changeVotingTime = e => {\n        this.setState({voteTime: e.target.value});\n    }\n\n    async componentDidMount() {\n        let data = await fetch('/topics');\n        let topics = await data.json();\n        topics.sort();\n        topics.unshift('Random');\n        this.setState({topics});\n    }\n}\n","import React, { Component } from \"react\";\n\nimport \"./CreateGame.css\";\nimport { doc, getDoc, setDoc } from \"firebase/firestore\";\nimport { Game } from \"../objects/game\";\n\nexport default class JoinGame extends Component {\n  constructor(props) {\n    super(props);\n\n    this.name = React.createRef();\n    this.code = React.createRef();\n  }\n\n  back = () => {\n    this.props.renderPage(\"splash\");\n  };\n\n  join = async (e) => {\n    e.preventDefault();\n    let db = this.props.db;\n    const docRef1 = doc(db, \"rooms\", this.code.current.value);\n    const room = await getDoc(docRef1);\n    if (room.exists()) {\n      this.props.setCode(room.data().code);\n      this.props.player.room=room.data().code\n      const cityRef = doc(db, \"players_online\", this.props.player.player_id);\n      setDoc(cityRef, { isHost: false, room: room.data().code }, { merge: true });\n\n      let game = Object.assign(new Game(), room.data());\n      game.playerJoin(this.props.player);\n      var json = game.toJSON();\n      await setDoc(doc(db, \"rooms\", game.code), json, { merge: true });\n\n      this.props.notify_player(\"game_joined\", {\n        player_id: this.props.player.player_id,\n        code: game.code,\n      });\n      this.props.renderPage(\"lobby\");\n    } else {\n      this.props.setMessage(\"Invalid\");\n    }\n\n    //\n    // if(this.props.message === 'Game does not exist.') {\n    //     return;\n    // } else {\n    //     this.props.renderPage('lobby');\n    // }\n  };\n\n  forceUpper = () => {\n    this.code.current.value = this.code.current.value.toUpperCase();\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"main-container --join\">\n          <div className=\"back\" onClick={this.back}></div>\n          <div className=\"title\">\n            <h2>Join a Game</h2>\n          </div>\n          <form className=\"form-group\">\n            <label>Game Code</label>\n            <input maxLength=\"4\" ref={this.code} onChange={this.forceUpper} />\n            <button\n              className=\"button--default\"\n              onClick={this.join}\n              type=\"submit\"\n            >\n              Join Game\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nimport './Lobby.css';\n\nexport default class Lobby extends Component {\n    \n    back = () => {\n        this.props.leaveGame(this.props.socket);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"main-container --lobby\">\n                    <div className=\"back\" onClick={this.back}></div>\n                    <div className=\"title\">\n                        <h2>Game Code:</h2>\n                        <h1>{this.props.code_game}</h1>\n                    </div>\n                    <p className=\"lobby__info\">Do not lock your device, or you will be disconnected.</p>\n                    <p className=\"lobby__info\">You need at least 3 players to play.</p>\n                    <div className=\"lobby__players\">\n                        <h2>{`${this.props.players.length} of 8 players.`}</h2>\n                        {this.props.players.map(player => {\n                                return (<h2 key={player.id}>{player}</h2>)\n                            }\n                        )}\n                    </div>\n                    {this.props.isHost &&\n                    <div className=\"button-group\">\n                        <button className=\"button--default\" onClick={this.props.startGame}>Start Game</button>\n                    </div>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport './Chat.css';\n\nexport default class Chat extends Component {\n\n    constructor(props) {\n        super(props);\n        this.messageContent = React.createRef();\n    }\n\n    sendMessage = e => {\n        e.preventDefault();\n        this.props.socket.emit(\"receive message\", {code: this.props.code, content: this.messageContent.current.value});\n        this.messageContent.current.value = '';\n    }\n\n    scrollToBottom = () => {\n        this.chatEnd.scrollIntoView({behavior: \"smooth\"});\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.messages !== this.props.messages) {\n            this.scrollToBottom();\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"chat\">\n                <div className=\"chat__messages\">\n                    {this.props.messages.map(message => {\n                        return(\n                                <div className=\"chat__message\">\n                                    <span className=\"chat__message__author\" style={message.author === 'System' ? {color: 'red'} : {}}>{message.author}</span>: {message.content}\n                                </div>\n                        )\n                    })}\n                    <div ref={(el) => { this.chatEnd = el; }}>\n                    </div>\n                </div>\n                <form className=\"chat__submit\">\n                    <input className=\"chat__submit__input\" placeholder=\"Start typing...\" ref={this.messageContent} />\n                    <button className=\"chat__submit__button\" onClick={this.sendMessage} type=\"submit\">Send</button>\n                </form>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport Chat from './Chat';\n\nimport './Round.css';\n\n\nexport default class Round extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.clue = React.createRef();\n    }\n\n    submitWord = e => {\n        e.preventDefault();\n        if(this.clue.current.value !== '') {\n            this.props.socket.emit('word submitted', {code: this.props.code, word: this.clue.current.value});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"main-container --round\">\n                    <div className=\"round__topic\">\n                        <div className=\"round__topic__title\">{this.props.topic.topic}</div>\n                        {\n                            this.props.topic.words.map(word => {\n                                if(this.props.secretWord === word) {\n                                    return <div className=\"round__topic__word highlighted\">{word}</div>\n                                } else {\n                                    return <div className=\"round__topic__word\">{word}</div>\n                                }\n                            })\n                        }\n                    </div>\n\n                    {this.props.isChameleon && \n                        <div>\n                            <h3>You are the</h3> \n                            <h2>CHAMELEON</h2>\n                        </div>\n                    }\n\n                    {!this.props.isChameleon && \n                        <div>\n                            <h3>The secret word is</h3>\n                            {this.props.secretWord && <h2>{this.props.secretWord.toUpperCase()}</h2>}\n                        </div>\n                    }\n                    <div className=\"round__timer\">{this.props.currentTurn} has {this.props.timer} seconds to answer.</div>\n                    {this.props.isMyTurn === true &&\n                        <form className=\"form-group\">\n                            <label>Your clue:</label>\n                            <input maxLength=\"36\" ref={this.clue} />\n                            <button className=\"button--default\" onClick={this.submitWord} type=\"submit\">Submit</button>\n                        </form>\n                    }\n                                                <button className=\"button--default\" onClick={this.props.reset} type=\"submit\">Reset Game</button>\n\n                    <Chat messages={this.props.messages} code={this.props.code} socket={this.props.socket} />\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Clue extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {clueSelected: false};\n    }\n    componentDidUpdate() {\n        if(this.props.timer === 0) {\n            console.log('Votes being sent in!');\n        }\n    }\n\n    selectClue = () => {\n        this.props.selectClue(this.props.id);\n    }\n\n    render() {\n        return (\n            <div className={this.props.selectedClue === this.props.id ? \"vote__info vote__info__selected\" : \"vote__info\"} onClick={this.selectClue}>\n                <span className=\"vote__info__playername\">{this.props.player.name}</span>\n                <span className=\"vote__info__playeranswer\">{this.props.player.answer.length > 0 ? this.props.player.answer : 'N/A'}</span>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport Chat from './Chat';\nimport Clue from './Clue';\nimport './Vote.css';\n\nexport default class Vote extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {showVote: true};\n    }\n\n    toggleVote = () => {\n        this.setState({showVote: !this.state.showVote})\n    }\n\n    selectClue = selectedClue => {\n        this.setState({selectedClue});\n        this.props.placeVote(selectedClue);\n    }\n\n    render() {\n        return (\n            <div className=\"main-container --vote\">\n                <h2>It's time to vote!</h2>\n                {this.props.tieBreaker && <h2>TIE BREAKER!</h2>}\n                <h2>{this.props.timer}</h2>\n                <div className=\"vote__container\">\n                    <div className={this.state.showVote ? \"vote__info__container\" : \"--hidden\"}>\n                        {this.props.playerAnswers.map(player => {\n                            if(player.id !== this.props.playerId)  {\n                                return(\n                                    <Clue player={player} timer={this.props.timer} id={player.id} key={player.id} selectClue={this.selectClue} selectedClue={this.state.selectedClue} />\n                                )\n                            } else {\n                                return(<></>);\n                            }\n                        })}\n                    </div>\n\n                    <div className={!this.state.showVote ? \"round__topic\" : \"--hidden\"}>\n                        <div className=\"round__topic__title\">{this.props.topic.topic}</div>\n                        {\n                            this.props.topic.words.map(word => {\n                                if(this.props.secretWord === word) {\n                                    return <div className=\"round__topic__word highlighted\">{word}</div>\n                                } else {\n                                    return <div className=\"round__topic__word\">{word}</div>\n                                }\n                            })\n                        }\n                    </div>\n                    <div className=\"vote__selection-box\">\n                        <div className={this.state.showVote ? \"vote__selection--enabled\" : \"vote__selection--disabled\"} onClick={this.toggleVote}>Clues</div>\n                        <div className={!this.state.showVote ? \"vote__selection--enabled\" : \"vote__selection--disabled\"} onClick={this.toggleVote}>Topic</div>\n                    </div>\n                </div>\n                <Chat messages={this.props.messages} code={this.props.code} socket={this.props.socket} />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nimport Chat from './Chat';\n\nexport default class Results extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            voteCorrect: false,\n            topics: [],\n        };\n    }\n\n    async componentDidMount() {\n        if(this.props.chameleon === this.props.winningPlayer) {\n            this.setState({voteCorrect: true});\n        }\n\n        let data = await fetch('/topics');\n        let topics = await data.json();\n        topics.sort();\n        topics.unshift('Random');\n        this.setState({topics});\n    }\n\n    render() {\n        return (\n            <div className=\"main-container --results\">\n                {!this.props.isChameleon &&\n                    <>\n                        <h2>The results are in!</h2>\n                        <p>You thought the chameleon was <strong>{this.props.winningPlayer}</strong>.</p>\n                        <p>And the chameleon was actually...</p>\n                        <h1>{this.props.chameleon}</h1>\n                    </>\n                }\n\n                {this.props.isChameleon && this.state.voteCorrect && \n                    <>\n                        <h2>You've been found!</h2>\n                        <p>Do you know what the secret word was?</p>\n                    </>\n                }\n\n                {this.props.isChameleon && !this.state.voteCorrect &&\n                    <>\n                        <h2>You got away this time!</h2>\n                    </>\n                }\n                {this.props.isHost &&\n                    <>\n                        <div className=\"results__form-group\">\n                            <label>Topic</label>\n                            <select onChange={this.props.changeTopic}>\n                                {this.state.topics.map(topic => {\n                                    return (<option value={topic} key={topic}>{topic}</option>);\n                                })\n                                }\n                            </select>\n                        </div>\n                        <div className=\"button-group\">\n                            <button className=\"button--default\" onClick={this.props.startGame}>New Game?</button>\n                        </div>\n                    </>\n                }\n                <Chat messages={this.props.messages} code={this.props.code} socket={this.props.socket} />\n            </div>\n        )\n    }\n}\n","export class Player {\n    constructor(name,player_id) {\n        this.player_id=player_id\n        this.name = name;\n        this.isHost = false;\n        this.points = 0;\n        this.isChameleon = false;\n        this.submittedWord = '';\n        this.votedFor = '';\n        this.room=\"\";\n        this.event={\n            name:\"\",\n            data:\"\"\n        };\n    }\n\n    vote(player) {\n        this.votedFor = player;\n    };\n\n    submitWord(word) {\n        this.submittedWord = word;\n    };\n    toJSON() {\n        var jsonedObject = {};\n        for (var x in this) {\n\n            if (x === \"toJSON\" || x === \"constructor\" || x===\"io\") {\n                continue;\n            }\n            jsonedObject[x] = this[x];\n        }\n        return jsonedObject;\n    }\n}\n","import React, { Component } from 'react'\n\nimport './AskingName.css';\n\nexport default class AskingName extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n    joinGame = () => {\n        this.props.login()\n        this.props.renderPage('splash');\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"main-container --splash\">\n                    <div className=\"brand\">\n                        <h1>Chameleon</h1>\n                    </div>\n                    <div className=\"button-group\">\n                    <div>\n                                <label>Name</label>\n                                <input onChange={this.props.changeName} />\n                            </div>\n                            <button className=\"button--default\" onClick={this.joinGame}>GO</button>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\n\nimport Splash from \"./components/Splash\";\nimport CreateGame from \"./components/CreateGame\";\nimport JoinGame from \"./components/JoinGame\";\nimport Lobby from \"./components/Lobby\";\nimport Round from \"./components/Round\";\nimport Vote from \"./components/Vote\";\nimport Results from \"./components/Results\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport {\n  doc,\n  onSnapshot,\n  setDoc,\n  getDoc,\n  query,\n  collection,\n  orderBy,\n} from \"firebase/firestore\";\nimport { IO } from \"./objects/io\";\nimport { Player } from \"./objects/player\";\nimport AskingName from \"./components/AskingName\";\nimport { Game } from \"./objects/game\";\n\n// Initialize Firebase\n// Copy the config from your own Firebase app\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCA7kl97Ip7NPUCQdtrb7HG_tYZiillaVg\",\n  authDomain: \"airplane-shooting.firebaseapp.com\",\n  databaseURL: \"https://airplane-shooting.firebaseio.com\",\n  projectId: \"airplane-shooting\",\n  storageBucket: \"airplane-shooting.appspot.com\",\n  messagingSenderId: \"758825287318\",\n  appId: \"1:758825287318:web:df02c234565efbdff00cb7\",\n};\n\nvar app = firebase.initializeApp(firebaseConfig);\nvar db = firebase.firestore();\n\n// enable vibration support\nnavigator.vibrate =\n  navigator.vibrate ||\n  navigator.webkitVibrate ||\n  navigator.mozVibrate ||\n  navigator.msVibrate;\n\nconst socketUrl =\n  process.env.NODE_ENV !== \"production\"\n    ? process.env.SOCKET_URL\n    : \"https://chameleon.jwayne.dev/\";\n\nfunction getCookie(cname) {\n  let name = cname + \"=\";\n  let decodedCookie = decodeURIComponent(document.cookie);\n  let ca = decodedCookie.split(\";\");\n  for (let i = 0; i < ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == \" \") {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return \"\";\n}\n\nfunction setCookie(cname, cvalue, exdays) {\n  const d = new Date();\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  let expires = \"expires=\" + d.toUTCString();\n  document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      db: db,\n      socket: null,\n      id: \"\",\n      rendered: \"askingname\",\n      isHost: false,\n      playerName: null,\n      players: [],\n      code: \"\",\n      message: \"\",\n      topic: {},\n      timer: 0,\n      currentTurn: \"\",\n      showAlert: false,\n      alert: \"\",\n      messages: [],\n      playerAnswers: [],\n      vote: \"\",\n      isChameleon: false,\n      tieBreaker: false,\n      selectedTopic: null,\n      io: new IO(db),\n      game: null,\n    };\n  }\n  async listen_room() {\n    const docRef1 = doc(db, \"rooms\", this.state.code_game);\n    const room = await getDoc(docRef1);\n    let game = Object.assign(new Game(), room.data());\n    game.io.db = this.state.db;\n    this.setState({\n      game: game,\n      players: game.players.map((player) => player.name),\n    });\n    const unsub = onSnapshot(doc(db, \"rooms\", this.state.code_game), (doc) => {\n      console.log(\"Current data 2: \", doc.data());\n      let event1 = doc.data().events;\n      if (event1 == undefined) {\n        return;\n      }\n      switch (doc.data().events.name) {\n        case \"chameleon\": {\n          if ((event1.data = this.player.name)) {\n            let player = this.state.player;\n            player.isChameleon = true;\n            this.setState({ isChameleon: true, player: player });\n            const cityRef = doc(\n              this.db,\n              \"players_online\",\n              this.state.player.playerId\n            );\n            setDoc(\n              cityRef,\n              {\n                isChameleon: true,\n              },\n              { merge: true }\n            );\n          }\n          break;\n        }\n        case \"start_vote\":\n          this.setState({ playerAnswers: event1.data, rendered: \"vote\" });\n          break;\n        case \"answers_in\":\n          this.setState({ playerAnswers: event1.data });\n          break;\n        case \"tie_breaker\":\n          this.setState({ tieBreaker: true });\n          break;\n        case \"results\":\n          this.setState({\n            chameleon: event1.data.chameleon,\n            winningPlayer: event1.data.winningPlayer,\n          });\n          this.renderPage(\"results\");\n          break;\n        case \"game_started\":\n          this.setState({\n            message: \"\",\n            timer: 0,\n            currentTurn: \"\",\n            playerAnswers: [],\n            vote: \"\",\n            isChameleon: false,\n            tieBreaker: false,\n          });\n          if (this.state.player.isChameleon) {\n            this.setState({ topic: event1.data.topic });\n            this.renderPage(\"round\");\n          } else {\n            this.setState({\n              topic: event1.data.topic,\n              secretWord: event1.data.secretWord,\n            });\n            this.renderPage(\"round\");\n          }\n          break;\n        default:\n        // code block\n      }\n    });\n  }\n  async componentDidMount() {\n    let id_chamelon = getCookie(\"id_chamelon\");\n    if (id_chamelon.length == 0) {\n      let new_id = Math.floor(Math.random() * 1000);\n      setCookie(\"id_chamelon\", new_id, 1);\n      id_chamelon = new_id;\n    } else {\n      const docRef = doc(db, \"players_online\", id_chamelon);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        console.log(\"Document data:\", docSnap.data());\n        let player = docSnap.data();\n        this.state.io.to(\"players_online\").emit(\"on_connect\", \"\", id_chamelon);\n        const unsub = onSnapshot(\n          doc(db, \"players_online\", id_chamelon),\n          (doc) => {\n            let data = doc.data().events.data;\n            switch (doc.data().events.name) {\n              case \"new_game\":\n                this.setState({\n                  code_game: data.code,\n                  isHost: true,\n                });\n                this.listen_room();\n                break;\n              case \"game_joined\":\n                this.setState({\n                  code_game: data.code,\n                  playerId: data.playerId,\n                });\n                this.listen_room();\n                break;\n              default:\n            }\n          }\n        );\n        this.setState({ player: player, playerName: player.name });\n        if (this.state.player.room.length > 0) {\n          const docRef1 = doc(db, \"rooms\", this.state.player.room);\n          const docSnap1 = await getDoc(docRef1);\n          if (docSnap1.exists()) {\n            let game = docSnap1.data();\n            this.setState({\n              code_game: this.state.player.room,\n              isHost: this.state.player.isHost,\n            });\n            this.listen_room();\n            this.renderPage(\"lobby\");\n          }\n        } else {\n          this.renderPage(\"splash\");\n        }\n      } else {\n        // doc.data() will be undefined in this case\n        console.log(\"No such document!\");\n      }\n    }\n    this.setState({ playerId: id_chamelon });\n    this.initSocket();\n  }\n\n  createAlert = (message) => {\n    this.setState({\n      messages: [\n        ...this.state.messages,\n        { author: \"System\", content: message },\n      ],\n    });\n  };\n\n  initSocket = () => {\n    // const socket = io(socketUrl);\n    // socket.on('connect', () => {\n    //     console.log('Connected to host.');\n    // });\n    // socket.on('new game', data => {\n    //     this.setState({code: data.code, isHost: true, playerId: data.playerId});\n    // });\n    // socket.on('game joined', data => {\n    //     this.setState({code: data.code, playerId: data.playerId });\n    // });\n    // socket.on('leave game', data => {\n    //     this.setState({message: data.message || ''});\n    //     this.leaveGame(socket);\n    // });\n    // socket.on(\"update players\", (players) => {\n    //     this.setState({players})\n    // });\n    // socket.on(\"update timer\", timer => {\n    //     this.setState({timer});\n    // })\n    // socket.on(\"error\", message => {\n    //     this.setState({message});\n    // })\n    // socket.on(\"game started\", data => {\n    //     this.setState({\n    //         message: '',\n    //         timer: 0,\n    //         currentTurn: '',\n    //         playerAnswers: [],\n    //         vote: '',\n    //         isChameleon: false,\n    //         tieBreaker: false\n    //     });\n    //     if(data.playerType !== 'chameleon'){\n    //         this.setState({topic: data.topic, secretWord: data.secretWord});\n    //         this.renderPage('round');\n    //     } else {\n    //         this.setState({topic: data.topic});\n    //         this.renderPage('round');\n    //     }\n    // });\n    // socket.on(\"my turn\", () => {\n    //     this.setState({isMyTurn: true});\n    //     if (navigator.vibrate) {\n    //         navigator.vibrate(3000);\n    //     }\n    // });\n    // socket.on(\"chameleon\", () => {\n    //     this.setState({isChameleon: true});\n    // })\n    // socket.on(\"turn over\", () => {\n    //     this.setState({isMyTurn: false});\n    // });\n    // socket.on(\"alert\", data => {\n    //     this.createAlert(data.message);\n    // });\n    // socket.on(\"current turn\", playerName => {\n    //     this.setState({currentTurn: playerName})\n    // });\n    // socket.on(\"receive message\", data => {\n    //     this.setState({messages: [ ...this.state.messages, {author: data.author, content: data.content }]})\n    // });\n    // socket.on(\"start vote\", answers => {\n    //     this.setState({playerAnswers: answers, rendered: 'vote'})\n    // });\n    // socket.on(\"answers in\", data => {\n    //     this.setState({playerAnswers: data})\n    // });\n    // socket.on(\"tie breaker\", () => {\n    //     this.setState({tieBreaker: true});\n    // })\n    // socket.on(\"results\", data => {\n    //     this.setState({chameleon: data.chameleon, winningPlayer: data.winningPlayer});\n    //     this.renderPage('results');\n    // })\n  };\n  login = async () => {\n    let player = new Player(this.state.playerName, this.state.playerId);\n    await setDoc(doc(db, \"players_online\", player.player_id), player.toJSON());\n    this.state.io\n      .to(\"players_online\")\n      .emit(\"on_connect\", \"\", this.state.playerId);\n    this.setState({ player });\n  };\n\n  setCode = (code) => {\n    this.setState({ code_game: code });\n  };\n\n  setMessage = (message) => {\n    this.setState({ message });\n  };\n  notify_player = (name, data) => {\n    this.state.io.to(\"players_online\").emit(name, data, this.state.playerId);\n  };\n  leaveGame = (socket) => {\n    socket.emit(\"leave game\");\n    this.setState({\n      rendered: \"askingname\",\n      isHost: false,\n      players: [],\n      code_game: \"\",\n      message: \"\",\n      topic: {},\n      timer: 0,\n      currentTurn: \"\",\n      showAlert: false,\n      alert: \"\",\n      messages: [],\n      playerAnswers: [],\n      playerId: \"\",\n      vote: \"\",\n      isChameleon: false,\n      tieBreaker: false,\n      selectedTopic: \"\",\n    });\n  };\n\n  renderPage = (page) => {\n    this.setState({\n      rendered: page,\n    });\n  };\n  changeName = (e) => {\n    this.setState({ playerName: e.target.value });\n  };\n \n  startGame = () => {\n    if (this.state.players.length > 1) {\n      console.log(\"Game starting.\");\n      // console.log('Game config: ', config);\n      this.state.game.startRound(\"\");\n\n      //   this.state.socket.emit(\"start game\", {\n      //     code_game: this.state.code,\n      //     topic: this.state.selectedTopic ? this.state.selectedTopic : null,\n      //   });\n    }\n  };\n  reset = () => { \n    this.state.io.to(\"rooms\").emit(\"new_game\", \"\", this.state.code_game);\n  }\n  placeVote = (id) => {\n    this.setState({ vote: id });\n    this.state.socket.emit(\"place vote\", { code_game: this.state.code, id });\n  };\n\n  changeTopic = (e) => {\n    this.setState({ selectedTopic: e.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        {this.state.rendered === \"askingname\" && (\n          <AskingName\n            renderPage={this.renderPage}\n            changeName={this.changeName}\n            login={this.login}\n          />\n        )}\n        {this.state.rendered === \"splash\" && (\n          <Splash renderPage={this.renderPage} name={this.state.playerName} />\n        )}\n        {this.state.rendered === \"create\" && (\n          <CreateGame\n            renderPage={this.renderPage}\n            db={this.state.db}\n            setHost={this.setHost}\n            player={this.state.player}\n            notify_player={this.notify_player}\n          />\n        )}\n        {this.state.rendered === \"join\" && (\n          <JoinGame\n            renderPage={this.renderPage}\n            socket={this.state.socket}\n            message={this.state.message}\n            setMessage={this.setMessage}\n            setCode={this.setCode}\n            db={this.state.db}\n            notify_player={this.notify_player}\n            player={this.state.player}\n          />\n        )}\n        {this.state.rendered === \"lobby\" && (\n          <Lobby\n            renderPage={this.renderPage}\n            socket={this.state.socket}\n            isHost={this.state.isHost}\n            code_game={this.state.code_game}\n            players={this.state.players}\n            leaveGame={this.leaveGame}\n            startGame={this.startGame}\n          />\n        )}\n        {this.state.rendered === \"round\" && (\n          <Round\n            isChameleon={this.state.isChameleon}\n            renderPage={this.renderPage}\n            messages={this.state.messages}\n            socket={this.state.socket}\n            code_game={this.state.code_game}\n            playerType={this.state.playerType}\n            currentTurn={this.state.currentTurn}\n            topic={this.state.topic}\n            secretWord={this.state.secretWord}\n            isMyTurn={this.state.isMyTurn}\n            timer={this.state.timer}\n            reset={this.reset}\n          />\n        )}\n        {this.state.rendered === \"vote\" && (\n          <Vote\n            tieBreaker={this.state.tieBreaker}\n            placeVote={this.placeVote}\n            renderPage={this.renderPage}\n            messages={this.state.messages}\n            socket={this.state.socket}\n            code_game={this.state.code_game}\n            playerAnswers={this.state.playerAnswers}\n            topic={this.state.topic}\n            secretWord={this.state.secretWord}\n            timer={this.state.timer}\n            playerId={this.state.playerId}\n          />\n        )}\n        {this.state.rendered === \"results\" && (\n          <Results\n            messages={this.state.messages}\n            socket={this.state.socket}\n            isHost={this.state.isHost}\n            code_game={this.state.code_game}\n            chameleon={this.state.chameleon}\n            startGame={this.startGame}\n            winningPlayer={this.state.winningPlayer}\n            isChameleon={this.state.isChameleon}\n            topic={this.selectedTopic}\n            changeTopic={this.changeTopic}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}